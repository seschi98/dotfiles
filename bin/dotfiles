#!/bin/bash
set -e

# Paths
CONFIG_DIR="$HOME/.config/dotfiles"
DOTFILES_DIR="$HOME/.dotfiles"
SSH_DIR="$HOME/.ssh"

# Helper functions
printInfo() {
    printf "\033[1;32m[DotFiles] ${1}\033[0m\n"
}
printError() {
    printf "\033[1;31m[DotFiles] ${1}\033[0m\n"
}

# Output information
clear
printInfo "Setting up development environment..."
echo ""

# Install Ansible
if ! [ -x "$(command -v ansible)" ]; then
  printInfo "Ansible not found on system, installing it via pip"
  python3 -m pip install --user ansible
else
  printInfo "Found ansible installation: $(command -v ansible)"
fi
echo ""

# Clone repository
if ! [[ -d "$DOTFILES_DIR" ]]; then
  printInfo "This is the first run, cloning git repository to $DOTFILES_DIR"
  git clone "https://github.com/seschi98/dotfiles.git" "$DOTFILES_DIR"
else
  printInfo "Found existing dotfiles folder: $DOTFILES_DIR"
  printInfo "Pulling changes for dotfiles from remote"
  git -C "$DOTFILES_DIR" pull
fi
echo ""

# Update Galaxy
printInfo "Updating ansible galaxy modules"
cd "$DOTFILES_DIR"
ansible-galaxy install -r requirements.yaml
echo ""

printInfo "Launching ansible playbook"

# Run playbook
ARGS="--diff -i 'localhost,' --extra-vars ANSIBLE_LOCALHOST_WARNING=false --ask-become-pass"

if [[ -f "$CONFIG_DIR/values.yaml" ]]; then
    ARGS="${ARGS} --extra-vars @$CONFIG_DIR/values.yaml"
    printInfo "Found configuration file: $CONFIG_DIR/values.yaml"
fi

if [[ -f "$CONFIG_DIR/vault-password.txt" ]]; then
    ARGS="${ARGS} --vault-password-file $CONFIG_DIR/vault-password.txt"
    printInfo "Found vault password file: $CONFIG_DIR/vault-password.txt"
fi

echo ""
ansible-playbook $ARGS $DOTFILES_DIR/main.yaml
